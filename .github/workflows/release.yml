name: Release

on:
  push:
    branches:
      - main
      - "1-legacy"
      - "2-legacy"
      - "3-legacy"
      - "4-legacy"

defaults:
  run:
    shell: bash

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  FORCE_COLOR: true

jobs:
  changelog:
    name: Changelog PR or Release
    if: ${{ github.repository_owner == 'withastro' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup PNPM
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 24
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build Packages
        run: pnpm run build

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@e0145edc7d9d8679003495b11f87bd8ef63c0cba # v1.5.3
        with:
          # Note: pnpm install after versioning is necessary to refresh lockfile
          version: pnpm run version
          publish: pnpm exec changeset publish
          commit: "[ci] release"
          title: "[ci] release"
        env:
          # Needs access to push to main
          GITHUB_TOKEN: ${{ secrets.FREDKBOT_GITHUB_TOKEN }}
          # Use OIDC for npm authentication instead of NPM_TOKEN
          NPM_TOKEN: '' # https://github.com/changesets/changesets/issues/1152#issuecomment-3190884868

      - name: Check if astro-vscode was published
        id: vscode-published
        if: steps.changesets.outputs.published == 'true'
        run: |
          if echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -e '.[] | select(.name == "astro-vscode")' > /dev/null; then
            echo "published=true" >> $GITHUB_OUTPUT
          else
            echo "published=false" >> $GITHUB_OUTPUT
          fi

      - name: Prepare vscode folder
        if: steps.vscode-published.outputs.published == 'true'
        working-directory: ./packages/language-tools/vscode
        run: |
          sleep 60s # wait for npm registry to update
          rm -rf node_modules
          npm i --workspaces=false # vsce does not support pnpm, so we need to pretend this is not a monorepo and use npm
          npm run build
          npm run build:grammar

      - name: Publish to VSCode Marketplace
        if: steps.vscode-published.outputs.published == 'true'
        working-directory: ./packages/language-tools/vscode
        run: |
          npx vsce publish -p ${{ secrets.VSCE_TOKEN }} --target win32-x64 win32-arm64 linux-x64 linux-arm64 linux-armhf darwin-x64 darwin-arm64 alpine-x64 alpine-arm64

      - name: Publish to OpenVSX
        if: steps.vscode-published.outputs.published == 'true'
        working-directory: ./packages/language-tools/vscode
        run: |
          npx ovsx publish -p ${{ secrets.OVSX_TOKEN }} --target win32-x64 win32-arm64 linux-x64 linux-arm64 linux-armhf darwin-x64 darwin-arm64 alpine-x64 alpine-arm64

      - name: Generate Announcement
        id: message
        if: steps.changesets.outputs.published == 'true'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: node .github/scripts/announce.mjs '${{ steps.changesets.outputs.publishedPackages }}'

      - name: Send message on Discord
        if: steps.changesets.outputs.published == 'true'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@d2594079a10f1d6739ee50a2471f0ca57418b554 # 0.4.0
        with:
          args: "${{ steps.message.outputs.DISCORD_MESSAGE }}"
